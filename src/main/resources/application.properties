server.port=9998

security.basic.enabled=false
security.ignored=/**

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/spring?useUnicode = true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
spring.datasource.username=mysdc
spring.datasource.password=ENC(hT7xcfM4jEkVN86ykyIOIA==)

# druid
# \u4E0B\u9762\u4E3A\u8FDE\u63A5\u6C60\u7684\u8865\u5145\u8BBE\u7F6E\uFF0C\u5E94\u7528\u5230\u4E0A\u9762\u6240\u6709\u6570\u636E\u6E90\u4E2D
# \u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=20
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.druid.max-wait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.druid.time-between-eviction-runs-millis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=select version();
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.druid.filters=stat,wall,log4j2
# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# \u5408\u5E76\u591A\u4E2ADruidDataSource\u7684\u76D1\u63A7\u6570\u636E
#spring.datasource.useGlobalDataSourceStat=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
#spring.datasource.druid.stat-view-servlet.url-pattern=
spring.datasource.druid.stat-view-servlet.reset-enable=false
#\u767B\u5F55\u67E5\u770B\u4FE1\u606F\u7684\u8D26\u53F7\u5BC6\u7801.
#spring.datasource.druid.stat-view-servlet.login-username=
#spring.datasource.druid.stat-view-servlet.login-password=
#IP\u767D\u540D\u5355
#spring.datasource.druid.stat-view-servlet.allow=
#IP\u9ED1\u540D\u5355
#spring.datasource.druid.stat-view-servlet.deny=

#\u6570\u636E\u5E93\u52A0\u5BC6
jasypt.encryptor.password=lzwing

#\u56FD\u9645\u5316
spring.messages.encoding=utf-8
spring.messages.basename=i18n/messages

#thymeleaf start
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
#\u5F00\u53D1\u65F6\u5173\u95ED\u7F13\u5B58,\u4E0D\u7136\u6CA1\u6CD5\u770B\u5230\u5B9E\u65F6\u9875\u9762
spring.thymeleaf.cache=false
#thymeleaf end

# REDIS (RedisProperties)
# Redis\u6570\u636E\u5E93\u7D22\u5F15\uFF08\u9ED8\u8BA4\u4E3A0\uFF09
spring.redis.database=0
# Redis\u670D\u52A1\u5668\u5730\u5740
spring.redis.host=10.1.11.109
# Redis\u670D\u52A1\u5668\u8FDE\u63A5\u7AEF\u53E3
spring.redis.port=6379
# Redis\u670D\u52A1\u5668\u8FDE\u63A5\u5BC6\u7801\uFF08\u9ED8\u8BA4\u4E3A\u7A7A\uFF09
#spring.redis.password=123456
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.pool.max-active=8
# \u8FDE\u63A5\u6C60\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.pool.max-wait=-1
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5
spring.redis.pool.max-idle=8
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5
spring.redis.pool.min-idle=0
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09
spring.redis.timeout=0


## \u6D88\u8D39\u8005\u7684\u7EC4\u540D
#apache.rocketmq.consumer.PushConsumer=PushConsumer
## \u751F\u4EA7\u8005\u7684\u7EC4\u540D
#apache.rocketmq.producer.producerGroup=Producer
## NameServer\u5730\u5740
#apache.rocketmq.namesrvAddr=10.2.5.17:9876

spring.rocketmq.name-server-address=10.2.5.17:9876
# \u53EF\u9009, \u5982\u679C\u65E0\u9700\u53D1\u9001\u6D88\u606F\u5219\u5FFD\u7565\u8BE5\u914D\u7F6E
spring.rocketmq.producer-group=lzwing-producer-group
# \u53D1\u9001\u8D85\u65F6\u914D\u7F6E\u6BEB\u79D2\u6570, \u53EF\u9009, \u9ED8\u8BA43000
spring.rocketmq.send-msg-timeout=5000
# \u8FFD\u6EAF\u6D88\u606F\u5177\u4F53\u6D88\u8D39\u60C5\u51B5\u7684\u5F00\u5173\uFF0C\u9ED8\u8BA4\u6253\u5F00
#spring.rocketmq.trace-enabled=false
# \u662F\u5426\u542F\u7528VIP\u901A\u9053\uFF0C\u9ED8\u8BA4\u6253\u5F00
spring.rocketmq.vip-channel-enabled=false

#kafka configuration
#spring.kafka.producer.bootstrap-servers=10.2.5.17:32768,10.2.5.17:32769
spring.kafka.producer.bootstrap-servers=10.2.4.107:9093
#\u6307\u5B9Akafka\u670D\u52A1\u5668\u5730\u5740
#spring.kafka.consumer.bootstrap-servers=10.2.5.17:32768,10.2.5.17:32769
spring.kafka.consumer.bootstrap-servers=10.2.4.107:9093

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#topic
kafka.app.topic.foo=my-replicated-topic

#kafka configuration
#\u6307\u5B9A\u6D88\u606F\u88AB\u6D88\u8D39\u4E4B\u540E\u81EA\u52A8\u63D0\u4EA4\u504F\u79FB\u91CF\uFF0C\u4EE5\u4FBF\u4E0B\u6B21\u7EE7\u7EED\u6D88\u8D39
spring.kafka.consumer.enable-auto-commit=true
#\u6307\u5B9A\u6D88\u606F\u7EC4
#spring.kafka.consumer.group-id=guan

#\u6307\u5B9A\u4ECE\u6700\u8FD1\u5730\u65B9\u5F00\u59CB\u6D88\u8D39(earliest)
spring.kafka.consumer.auto-offset-reset=latest

#email
spring.mail.host=smtp.exmail.qq.com
spring.mail.username=chenzhongyong@cecdat.com
spring.mail.password=Czy654321
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true


#elastic-job
regCenter.serverList=10.1.11.109:2181
regCenter.namespace=elastic-job-lite-springboot

simpleJob.cron=0/5 * * * * ?
simpleJob.shardingTotalCount=2
simpleJob.shardingItemParameters=0=Beijing,1=Shanghai,2=Guangzhou

dataflowJob.cron=0/5 * * * * ?
dataflowJob.shardingTotalCount=2
dataflowJob.shardingItemParameters=0=Beijing,1=Shanghai,2=Guangzhou


#hbase
spring.data.hbase.quorum=10.2.4.107:2181
spring.data.hbase.rootDir=hdfs://10.2.4.107:8020/hbase
spring.data.hbase.nodeParent=/hbase

#\u81EA\u5B9A\u4E49starter\u6D4B\u8BD5
wrapper.service.enabled=true
wrapper.service.suffix=suffix-
wrapper.service.prefix=prefix-

#\u81EA\u5B9A\u4E49\u5C5E\u6027
user.custom.username=longzhiwuing
user.custom.nickname=\u9F99\u4E4B\u821Eing
user.custom.email=czy3332842@gmail.com
user.custom.password=123456
user.custom.job=programmer

#\u4E71\u7801\u914D\u7F6E
#banner.charset=UTF-8
server.tomcat.uri-encoding=UTF-8
#spring.http.encoding.charset=UTF-8
#spring.http.encoding.enabled=true
#spring.http.encoding.force=true
#spring.messages.encoding=UTF-8

#flyway
flyway.locations=classpath:db/migration
#flyway.baseline-on-migrate=true
#flyway.url=jdbc:mysql://localhost:3306/spring?useUnicode = true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
#flyway.sql-migration-prefix=V
#flyway.sql-migration-suffix=.sql
#flyway.user=mysdc
#flyway.password=mysdc